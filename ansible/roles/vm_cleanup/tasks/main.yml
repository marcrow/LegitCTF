- name: Clean logs in /var/log
  shell: for i in $(ls {{ item }}); do  echo "" > $i; done
  with_items:
    - /var/log/*.log
    - /var/log/*.old
    - /var/log/apt/*
    - /var/log/mysql/*
    - /var/log/nginx/*
    - /var/log/exim4/*
    - /var/log/apache2/*
    - /var/log/wtmp/*
  become: yes
  ignore_errors: yes

- name: Clean archives in /var/log
  shell: rm -rf {{ item }}
  with_items:
    - /var/log/*.gz
  ignore_errors: yes
  become: yes

- name: Clean logs .1 in /var/log
  shell: rm -rf {{ item }}
  with_items:
    - /var/log/*.1
  ignore_errors: yes
  become: yes

- name: clean up /root history
  shell: echo "" > /root/.*history
  become: yes
  ignore_errors: yes

- name: clean up /home/{{ ansible_user_name }} history
  shell: echo "" > /home/{{ ansible_user_name }}/.*history
  become: yes
  ignore_errors: yes

- name: clean up {{ flag_location }}/network.sh
  shell: rm -f {{ flag_location }}/network.sh
  become: yes
  ignore_errors: yes

- name: Retrieve ansible password from secrets/ansible_passwd
  delegate_to: localhost
  become: no
  slurp:
    src: ../secrets/ansible_passwd  # Relative path from the playbook location
  register: slurped_password

- name: Decode the ansible password
  set_fact:
    ansible_passwd: "{{ slurped_password.content | b64decode }}"

- name: debug
  debug:
    var: ansible_passwd

- name: Hash the ansible password
  set_fact:
    ansible_passwd_hash: "{{ ansible_passwd | password_hash('sha512') }}"


- name: Debug ansible_passwd_hash
  debug:
    msg: "Hashed password is {{ ansible_passwd_hash }}"

- name: modify prof password
  become: yes
  user:
    name: "prof"
    password: "{{ ansible_passwd_hash }}"
    shell: /bin/bash
    update_password: always
    create_home: no
  ignore_errors: yes

- name: Check if 'prof' user exists in /etc/shadow
  become: yes
  command: grep '^prof:' /etc/shadow
  register: prof_in_shadow
  ignore_errors: yes

- name: Remove 'prof' line from /etc/passwd if not present in /etc/shadow
  become: yes
  lineinfile:
    path: /etc/passwd
    regexp: '^prof:'
    state: absent
  when:
    - prof_in_shadow.rc != 0
  